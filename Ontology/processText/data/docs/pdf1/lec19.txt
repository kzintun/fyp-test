In this lecture we continue the discussion which was begun last time, in which we had developed a flow chart for efficient computation of the DFT. Here we discuss the implication of that flow chart for "in-place" computation if the input data is stored in a "bit reversed" order. This bit-reversed order arises as a natural consequence of the way in which that flow-graph was derived, i.e. by dividing the input into its even and odd numbered points, then dividing each of those in a similar manner, etc.By rearranging the flow-graph it is possible to generate a number of other algorithms. For example, the input ordering can be rearranged so that bit reversal is not required. However, the advantage of in-place computation is lost. Another rearrangement, commonly referred to as the Singleton algorithm results in a flow-graph structure which is identical from stage to stage. This form is useful when the data is stored in sequential memory such as shift registers or disk rather than random access memory.The above algorithms are collectively referred to as "decimation-in-time" algorithms because they were based on successive subdivisions of the input sequence. A companion set of algorithms referred to as "decimation-in- frequency "are based on successive subdivisions of the output. We conclude this lecture by introducing this class of algorithms, obtaining in particular, the basic flow-graph representing this algorithm. In the next lecture we consider a number of rearrangements of this flow-graph.